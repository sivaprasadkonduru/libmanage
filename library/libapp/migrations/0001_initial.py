# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2018-07-26 02:43
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('department', models.CharField(choices=[('MBA', 'Management'), ('MCA', 'PG'), ('BTech', 'Bachelors'), ('MTech', 'Masters')], default='BTech', max_length=20)),
                ('branch', models.CharField(choices=[('ECE', 'Electronics'), ('EEE', 'Electrical'), ('CSE', 'Computers'), ('CSIT', 'Information Tech'), ('Civil', 'Civil Engg')], default='CSE', max_length=20)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], max_length=10)),
                ('rollno', models.CharField(max_length=20)),
                ('doj', models.DateField(blank=True, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('phone_num', models.CharField(max_length=15)),
                ('address', models.TextField(blank=True, max_length=255)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('author', models.CharField(max_length=50)),
                ('category', models.CharField(choices=[('Electronics', 'ECE'), ('Electrical', 'EEE'), ('Civil', 'Civil'), ('Computers', 'CSE'), ('Mechanical', 'ME'), ('Management', 'MBA')], max_length=100)),
                ('publisher', models.CharField(max_length=50)),
                ('availability', models.CharField(choices=[('YES', 'Y'), ('NO', 'N')], max_length=5)),
                ('edition', models.IntegerField()),
                ('book_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userbook', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
